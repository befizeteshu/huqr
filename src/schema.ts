import IBAN from 'iban';
import Joi from 'joi';
import { CustomHelpers, ErrorReport } from 'joi';

const huChars = /^[\x20-\x7eáíűőüöúóéÁÍŰŐÜÖÚÓÉ]*$/;
const validPurposeCodes = [
  'ACCT',
  'ADVA',
  'AGRT',
  'AIRB',
  'ALMY',
  'ANNI',
  'ANTS',
  'AREN',
  'BECH',
  'BENE',
  'BEXP',
  'BOCE',
  'BONU',
  'BUSB',
  'CASH',
  'CBFF',
  'CBTV',
  'CCRD',
  'CDBL',
  'CFEE',
  'CHAR',
  'CLPR',
  'CMDT',
  'COLL',
  'COMC',
  'COMM',
  'COMT',
  'COST',
  'CPYR',
  'CSDB',
  'CSLP',
  'CVCF',
  'DBTC',
  'DCRD',
  'DEPT',
  'DERI',
  'DIVD',
  'DMEQ',
  'DNTS',
  'ELEC',
  'ENRG',
  'ESTX',
  'FERB',
  'FREX',
  'GASB',
  'GDDS',
  'GDSV',
  'GOVI',
  'GOVT',
  'GSCB',
  'GVEA',
  'GVEB',
  'GVEC',
  'GVED',
  'HEDG',
  'HLRP',
  'HLTC',
  'HLTI',
  'HREC',
  'HSPC',
  'HSTX',
  'ICCP',
  'ICRF',
  'IDCP',
  'IHRP',
  'INPC',
  'INSM',
  'INSU',
  'INTC',
  'INTE',
  'INTX',
  'LBRI',
  'LICF',
  'LIFI',
  'LIMA',
  'LOAN',
  'LOAR',
  'LTCF',
  'MDCS',
  'MSVC',
  'NETT',
  'NITX',
  'NOWS',
  'NWCH',
  'NWCM',
  'OFEE',
  'OTHR',
  'OTLC',
  'PADD',
  'PAYR',
  'PENS',
  'PHON',
  'POPE',
  'PPTI',
  'PRCP',
  'PRME',
  'PTSP',
  'RCKE',
  'RCPT',
  'REFU',
  'RENT',
  'RINP',
  'RLWY',
  'ROYA',
  'SALA',
  'SAVG',
  'SCVE',
  'SECU',
  'SSBE',
  'STDY',
  'SUBS',
  'SUPP',
  'TAXS',
  'TELI',
  'TRAD',
  'TREA',
  'TRFD',
  'VATX',
  'VIEW',
  'WEBI',
  'WHLD',
  'WTER',
];

function ibancheck(value: string, helpers: CustomHelpers): string | ErrorReport {
  if (!IBAN.isValid(value)) {
    return helpers.error('invalid iban');
  }
  return value;
}

export const schema = Joi.object({
  kind: Joi.string().valid('HCT', 'RTP').required(),
  version: Joi.string().valid('001').required(),
  charset: Joi.string().valid('1').required(),
  bic: Joi.string()
    .pattern(/^[0-9]+$/, 'numbers')
    .length(11)
    .required(),
  name: Joi.string().pattern(huChars).max(70).required(),
  iban: Joi.string()
    .pattern(/^HU[0-9]+$/, 'iban')
    .length(28)
    .custom(ibancheck, 'iban check')
    .required(),
  amount: Joi.string()
    .pattern(/^HUF[0-9]+$/)
    .min(4)
    .max(15),
  validUntil: Joi.string()
    .pattern(/^[0-9]+\+[0-9]$/) // TODO more validation ? valid date, not in past
    .length(16)
    .required(),
  purpose: Joi.string()
    .valid(...validPurposeCodes)
    .length(4),
  message: Joi.string().pattern(huChars).max(70),
  shopId: Joi.string().pattern(huChars).max(35),
  merchDevId: Joi.string().pattern(huChars).max(35),
  invoiceId: Joi.string().pattern(huChars).max(35),
  customerId: Joi.string().pattern(huChars).max(35),
  credTranId: Joi.string().pattern(huChars).max(35),
  loyaltyId: Joi.string().pattern(huChars).max(35),
  navCheckId: Joi.string().pattern(huChars).max(35),
});
